namespace MicroserviceGen.CLI.Controllers.Api.Scripts;

public class NLayerScripts
{
    public const string Graphql = "echo \"Setting up for graphql\"\n\ncd _PasteNameHere_.Web\ndotnet add package HotChocolate.AspNetCore\ndotnet add package HotChocolate.Data\ndotnet add package HotChocolate.Types\n\nsed -i \"/var builder = WebApplication.CreateBuilder(args);/a \\\\\nbuilder.Services\\\\\n    .AddGraphQLServer()\\\\\n    .AddQueryType<QueryProvider>()\\\\\n    .AddMutationType<MutationProvider>();\" Program.cs\n\nsed -i \"/var app = builder.Build();/a \\\\\napp.MapGraphQL();\" Program.cs\n\nsed -i '1s|^|using _PasteNameHere_.Web.Graphql;\\n|' Program.cs\n\nmkdir graphql && cd graphql\ntouch QueryProvider.cs\ncat > QueryProvider.cs << 'EOF'\nusing _PasteNameHere_.Domain.Entities;\n\nnamespace _PasteNameHere_.Web.Graphql;\n\npublic class QueryProvider\n{\n    public IQueryable<Entity> GetEntities()\n    {\n        throw new NotImplementedException();\n    }\n}\nEOF\n\ntouch MutationProvider.cs\ncat > MutationProvider.cs << 'EOF'\nusing _PasteNameHere_.Domain.Entities;\n\nnamespace _PasteNameHere_.Web.Graphql;\n\npublic class MutationProvider\n{\n    public async Task<Entity> UpdateEntityAsync(Entity input)\n    {\n        throw new NotImplementedException();\n    }\n}\nEOF\n\ncd ..\n\ncd ../_PasteNameHere_.Domain\nmkdir Entities && cd Entities\ntouch Entities.cs\ncat > Entities.cs << 'EOF'\nnamespace _PasteNameHere_.Domain.Entities;\n\npublic class Entity\n{\n    public string Id {get;set;}\n}\nEOF\ncd ..\n";
    public const string Grpc = "dotnet new grpc --name _PasteNameHere_.Web\n";
    public const string KestrelHttp12 = "# Недоработано\necho \"Setting up kestrel for http1 and 2\"\n\ncd _PasteNameHere_.Web\n\nAPPSETTINGS=\"appsettings.json\"\nAPPSETTINGS_DEV=\"appsettings.Development.json\"\nsed -i '/\"Kestrel\": {/,/^  }/c\\\n  \"Kestrel\": {\\\n    \"Endpoints\": {\\\n      \"Http\": {\\\n        \"Url\": \"http://localhost:5056\"\\\n      },\\\n      \"Grpc\": {\\\n        \"Url\": \"http://localhost:5057\",\\\n        \"Protocols\": \"Http2\"\\\n      }\\\n    }\\\n  }' \"$APPSETTINGS\"\nsed -i '/\"Kestrel\": {/,/^  }/c\\\n  \"Kestrel\": {\\\n    \"Endpoints\": {\\\n      \"Http\": {\\\n        \"Url\": \"http://localhost:5056\"\\\n      },\\\n      \"Grpc\": {\\\n        \"Url\": \"http://localhost:5057\",\\\n        \"Protocols\": \"Http2\"\\\n      }\\\n    }\\\n  }' \"$APPSETTINGS_DEV\"\n\nsed -i \"/var builder = WebApplication.CreateBuilder(args);/a \\\\\nbuilder.WebHost.ConfigureKestrel(options => {\\\\\n    options.Configure(builder.Configuration.GetSection(\\\"Kestrel\\\"));\\\\\n});\" Program.cs\n\ncd ..\n";
    public const string Swagger = "echo \"Setting up for swagger\"\n\ncd _PasteNameHere_.Web\ndotnet add package Swashbuckle.AspNetCore.SwaggerGen --version 8.1.4\ndotnet add package Swashbuckle.AspNetCore.SwaggerUI --version 8.1.4\n\nsed -i '1s|^|using Microsoft.OpenApi.Models;\\n|' Program.cs\nsed -i \"/var builder = WebApplication.CreateBuilder(args);/a \\\\\nbuilder.Services.AddSwaggerGen(s =>\\\\\n{\\\\\n    s.SwaggerDoc(\\\"v1\\\", new OpenApiInfo { Title = \\\"Api\\\", Version = \\\"v1\\\" });\\\\\n});\\\\\nbuilder.Services.AddControllers();\" Program.cs\nsed -i \"/var app = builder.Build();/a \\\\\nif (app.Environment.IsDevelopment())\\\\\n{\\\\\n    app.UseDeveloperExceptionPage();\\\\\n    app.UseSwagger();\\\\\n    app.UseSwaggerUI(c => c.SwaggerEndpoint(\\\"/swagger/v1/swagger.json\\\", \\\"Account.API v1\\\"));\\\\\n}\" Program.cs\ncd ..\n";
    public const string Web = "dotnet new web --name _PasteNameHere_.Web\n";
}